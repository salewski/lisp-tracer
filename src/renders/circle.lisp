(in-package #:lisp-tracer)

(defparameter ray-origin (make-point 0 0 -5))
(defparameter wall-z 10)
(defparameter wall-size 7.0)
(defparameter canvas-pixels 100)
(defparameter pixel-size (/ wall-size canvas-pixels))
(defparameter half (/ wall-size 2))

(let ((canv (make-canvas canvas-pixels canvas-pixels))
      (color (make-color 1 0 0))
      (shape (make-sphere)))
  (iter (for y from 0 below canvas-pixels)
    (let ((world-y (- (* pixel-size y) half)))
      (iter (for x from 0 below canvas-pixels)
        (let* ((world-x (+ (- half) (* pixel-size x)))
               (pos (make-point world-x world-y wall-z))
               (r (make-ray ray-origin (normalize (sub pos ray-origin))))
               (xs (intersect shape r)))
          (when (hit xs)
            (write-pixel canv x y color))))))
  (canvas-to-ppm canv))
